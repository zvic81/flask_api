{
  "info": {
    "description": "RestAPI server with Apiflask and postgresql",
    "title": "APIFlask",
    "version": "0.1.0"
  },
  "tags": [],
  "paths": {
    "/goods": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GoodsOut"
                      }
                    },
                    "code": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Goods"
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MessageOk"
                    },
                    "code": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Create Good",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoodIn"
              }
            }
          }
        }
      }
    },
    "/goods/{good_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "good_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GoodOut"
                    },
                    "code": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get Good Id"
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "good_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MessageOk"
                    },
                    "code": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Put Good Id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoodIn"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "good_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete Good Id"
      }
    }
  },
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "ValidationError": {
        "properties": {
          "detail": {
            "type": "object",
            "properties": {
              "<location>": {
                "type": "object",
                "properties": {
                  "<field_name>": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "HTTPError": {
        "properties": {
          "detail": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoodsOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "Coffee"
          }
        }
      },
      "GoodIn": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Coffee"
          },
          "manufacture_date": {
            "type": "string",
            "example": "02/08/2019"
          },
          "price": {
            "type": "integer",
            "example": 21
          },
          "picture_url": {
            "type": "string",
            "example": "pic.com/mypic.jpg"
          }
        },
        "required": [
          "name"
        ]
      },
      "MessageOk": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          }
        }
      },
      "GoodOut": {
        "type": "object",
        "properties": {
          "manufacture_date": {
            "type": "string",
            "example": "02/08/2019"
          },
          "price": {
            "type": "integer",
            "example": 21
          },
          "name": {
            "type": "string",
            "example": "Coffee"
          },
          "id": {
            "type": "integer"
          },
          "picture_url": {
            "type": "string",
            "example": "pic.com/mypic.jpg"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  }
}
